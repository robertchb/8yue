1.大体从下面这个几个方向来介绍下控制器。
首先交换机和云盒通信主要是通过NETCONF协议来进行的。
接着通过NETCONF协议，说明下交换机和云盒是如何建立链接，
然后云盒通过NETCON协议，下发的命令如何在交换机上实现的。
以及NETCONF支持的数据库和NETCONF支持的能力和操作。

2.首先来简单的介绍下云盒和NETCON。
用户可以在云盒提供的可视化界面上对网络中的所有交换机进行统一的管理
这样提高了运维的效率。
接着什么是NETCONF协议呢？
NETCONF简称为网络配置 协议，云盒就是通过这套配置在云盒上
增加、修改、删除网络设备的配置。（SNMP为简单的网络管理协议，为什么不
采用SNMP协议呢？a.最主要的原因是SNMP不能满足配置管理的需求
b.SNMP不支持配置保护功能，而NETCONF提供锁定机制
c.SNMP不支持配置备份，而NETCONF提供了多中数据库，数据库之间可以进行备份）
d.SNMP扩展性差，NETCONF扩展性好，采用了XML编码，使得协议在管理能力和系统兼容能力方面由一定的扩展性


3.交换机与云盒如何建立链接的呢？
一般有以下两种方式：
a.云盒与叫喊及建立NETCONF会话
b.交换机主动与网管建立NETCIBF会话。
这边以交换机主动与网管建立NETCONF会话为例：
step1:首先控制器起callhome进程，建立controller和云盒直接的TCP链接
并告诉控制器：“嘿，我在这儿”
step2:TCP连接建立后，会在云盒上起SSHD进程，由控制区主动向交换机发起SSH连接申请。
step3：SSH通道建立后，就可以在上面跑NETCONF协议，下发一些XML格式的报文
进行业务交互


1.	交换机与网管建立SSH连接。
2.	交换机与网管通过Hello报文交换双方支持的能力。
3.	网管与交换机建立NETCONF会话后，即可发送RPC操作请求至交换机，进行配置管理。
4.	交换机对收到的RPC操作请求进行解析与处理，并发送RPC应答给网管。
5.	操作完成后，网管可以发送关闭NETCONF会话的RPC请求，以节省交换机和网管不必要的资源开销。
6.	交换机关闭NETCONF会话，并发送RPC应答给网管。



4.实现细节：
云盒通过NETCONF协议下发一条命令后，交换机侧首先通过confd协议进行解析
，接着通过RPA进程，接受confd的YANG模型变更消息，将其转化成VRP命令下发。

5.以sysname为例：
a.confd协议解析到收到的NETCONF协议报文，并于数据库中的配置相比对，发现sysname发生变更
b.confd检索关注/huawei-device:device/name节点变更的南向plugin，发现RPA关注此节点，通知RPA进程节点变更时间
c.RPA收到此节点变更事件后，与confd进行多次交互，得知sysname变化
d.RPA进程中调用具体的plugin实现，将sysname变更的xml作为参数传递给plugin
e.plugin解析此变化，并把sysname组织成命令行sysname switch配置到VRP进程。